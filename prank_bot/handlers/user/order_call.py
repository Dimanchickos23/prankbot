import asyncio

from aiogram import Bot, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Regexp
from aiogram.types import CallbackQuery, Message

from prank_bot.db_api.db import add_numb_info, get_vip_status,add_user_numb_prank, \
    get_user_prank_id, \
    get_user_prank_title, get_user_prank_numb, check_take_user_prank_money, get_prank_text_info, get_prank_audio_info
from prank_bot.keyboards import retrun_markup, orerder_prank_user_markup, prank_categories_kb, orerder_prank_1_markup
from prank_bot.misc.callink import call_ncreate_call
from prank_bot.misc.prank_checker import check_user_prank
from prank_bot.misc.states import user_


async def order_call_info(cb: CallbackQuery):
    await cb.answer()
    bot = Bot.get_current()
    chat_id = cb.message.chat.id
    await bot.delete_message(chat_id, message_id=cb.message.message_id)
    prank_id = cb.data[5:]
    print(prank_id)
    prank_info = get_prank_text_info(prank_id)
    prank_audio = get_prank_audio_info(prank_id)
    await bot.send_voice(chat_id, voice=prank_audio, caption=prank_info,
                         reply_markup=orerder_prank_1_markup(prank_id))
    await user_.order_call.set()


async def cancel_order_call(cb: CallbackQuery, state: FSMContext):
    await state.finish()
    await cb.answer()
    bot = Bot.get_current()
    await bot.delete_message(cb.message.chat.id, message_id=cb.message.message_id)
    await bot.send_message(cb.message.chat.id, "<strong>üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–∞–Ω–∫-–ë–æ—Ç–∞ üî•</strong>\n\n"
                                               "<strong>–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–∑—ã–≥—Ä–∞—Ç—å —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞, –∑–∞–∫–∞–∑–∞–≤ —É–≥–∞—Ä–Ω—ã–π –∞—É–¥–∏–æ "
                                               "–∑–≤–æ–Ω–æ–∫ –Ω–∞ –µ–≥–æ "
                                               "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üòâ</strong>",
                           parse_mode='HTML', reply_markup=prank_categories_kb)


# starts with order
async def order_call_start(cb: CallbackQuery, state: FSMContext):
    await cb.answer()
    bot = Bot.get_current()
    await bot.delete_message(cb.message.chat.id, message_id=cb.message.message_id)
    prank_id = cb.data[6:]
    add_numb_info(cb.message, prank_id)
    await bot.send_message(cb.message.chat.id, "üéô –ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–Ω–∫\n\n"
                                               "‚ùó –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏,\n       –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ:"
                                               " <b>89991234567</b>", reply_markup=retrun_markup())


async def call_user_order_confirm(message: Message, state=FSMContext):
    bot = Bot.get_current()
    chat_id = message.chat.id
    # "üì≤ –ó–≤–æ–Ω–æ–∫ –ø–æ—Å—Ç—É–ø–∏—Ç —Å –Ω–æ–º–µ—Ä–∞: <code>79210191999</code>\n\n"
    await state.finish()
    status = get_vip_status(chat_id)
    # user_pay = get_user_vip_procent(25)
    if status != False:
        add_user_numb_prank(message)
        user_prank_id = get_user_prank_id(chat_id)
        prank_title = get_prank_text_info(user_prank_id)
        await bot.send_message(chat_id, "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–Ω–∫–∞: \n"
                                        f"<code>{prank_title}</code>\n"
                                        "üá∑üá∫ –ù–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è: \n"
                                        f"<code>{message.text}</code>\n"
                                        f"üí∏ –° –í–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–æ: <code>0</code> RUB\n\n"
                                        "<strong>–û—Ç–ø—Ä–∞–≤–∏—Ç—å?</strong>\n"
                                        "<strong>‚ùóÔ∏è–í–ê–ñ–ù–û‚ùó</strong>Ô∏è–ü—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —Å <strong>–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º, "
                                        "–æ–ø–µ—Ä–∞—Ç–æ—Ä</strong> –≤—Å—ë —Ä–∞–≤–Ω–æ <strong>—Å–ø–∏—Å—ã–≤–∞–µ—Ç —Å –Ω–∞—Å –æ–ø–ª–∞—Ç—É</strong> "
                                        "<i>(–∏ –∑–∞ –∑–≤–æ–Ω–æ–∫, –∏ –∑–∞ –µ–≥–æ –∑–∞–ø–∏—Å—å)</i>, –ø–æ—ç—Ç–æ–º—É –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ, —É–≤—ã,<strong> "
                                        "–≤–µ—Ä–Ω—É—Ç—å –æ–ø–ª–∞—Ç—É –º—ã –Ω–µ —Å–º–æ–∂–µ–º üòï</strong>\n "
                                        "–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É <strong>¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª</strong> –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, "
                                        "—á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–æ–º ‚ùóÔ∏è",
                               parse_mode='HTML', reply_markup=orerder_prank_user_markup())
    else:
        add_user_numb_prank(message)
        user_prank_id = get_user_prank_id(chat_id)
        prank_title = get_user_prank_title(user_prank_id)
        await bot.send_message(chat_id, "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∞–Ω–∫–∞: \n"
                                        f"<code>{prank_title}</code>\n"
                                        "üá∑üá∫ –ù–æ–º–µ—Ä –ø–æ–ª—É—á–∞—Ç–µ–ª—è: \n"
                                        f"<code>{message.text}</code>\n"
                                        f"üí∏ –° –í–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–æ: <code>30</code> RUB\n\n"
                                        "<strong>–û—Ç–ø—Ä–∞–≤–∏—Ç—å?</strong>\n"
                                        "<strong>‚ùóÔ∏è–í–ê–ñ–ù–û‚ùó</strong>Ô∏è–ü—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —Å <strong>–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–æ–º, "
                                        "–æ–ø–µ—Ä–∞—Ç–æ—Ä</strong> –≤—Å—ë —Ä–∞–≤–Ω–æ <strong>—Å–ø–∏—Å—ã–≤–∞–µ—Ç —Å –Ω–∞—Å –æ–ø–ª–∞—Ç—É</strong> "
                                        "<i>(–∏ –∑–∞ –∑–≤–æ–Ω–æ–∫, –∏ –∑–∞ –µ–≥–æ –∑–∞–ø–∏—Å—å)</i>, –ø–æ—ç—Ç–æ–º—É –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ, —É–≤—ã,"
                                        "<strong> –≤–µ—Ä–Ω—É—Ç—å –æ–ø–ª–∞—Ç—É –º—ã –Ω–µ —Å–º–æ–∂–µ–º üòï</strong>\n "
                                        "–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É <strong>¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª</strong> –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, "
                                        "—á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–æ–º ‚ùóÔ∏è",
                               parse_mode='HTML', reply_markup=orerder_prank_user_markup())


async def call_user_order_error(message: Message, state: FSMContext):
    chat_id = message.chat.id
    bot = Bot.get_current()
    await bot.send_message(chat_id, "üéô –ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–Ω–∫\n\n"
                                    "‚ùó –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏,\n–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ:"
                                    " <b>89991234567</b>", reply_markup=retrun_markup())
    await user_.order_call.set()


async def cancel_call_user_order(call: CallbackQuery, state=FSMContext):
    await call.answer()
    await state.finish()
    await call.message.edit_text("<strong>üî• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–∞–Ω–∫-–ë–æ—Ç–∞ üî•</strong>\n\n"
                                 "<strong>–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ä–∞–∑—ã–≥—Ä–∞—Ç—å —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞, –∑–∞–∫–∞–∑–∞–≤ —É–≥–∞—Ä–Ω—ã–π –∞—É–¥–∏–æ –∑–≤–æ–Ω–æ–∫ –Ω–∞ –µ–≥–æ "
                                 "–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üòâ</strong>",
                                 parse_mode='HTML', reply_markup=prank_categories_kb)


async def call_user_send(cb: CallbackQuery, state: FSMContext):
    await cb.answer()
    bot = Bot.get_current()
    chat_id = cb.message.chat.id
    await bot.delete_message(chat_id, message_id=cb.message.message_id)
    take_prank_m = check_take_user_prank_money(chat_id)
    if take_prank_m != False:
        prank_numb = get_user_prank_numb(chat_id)
        prank_campaign_id = get_user_prank_id(chat_id)
        await bot.send_message(chat_id, '<strong>–ó–≤–æ–Ω–æ–∫ –±—É–¥–µ—Ç —Å–æ–≤–µ—Ä—à–µ–Ω –≤ –±–ª–∏–∂–∞–π—â–µ–µ –≤—Ä–µ–º—è</strong>\n\n'
                                        '<i>–°—Ç–∞—Ç—É—Å</i>:<code> –í –ø—Ä–æ—Ü–µ—Å—Å–µ</code>', parse_mode='HTML')
        call_ncreate_call(prank_campaign_id, prank_numb)
        await asyncio.sleep(2)
        loop = asyncio.get_event_loop()
        loop.create_task(check_user_prank(chat_id))
    else:
        await cb.answer('–ù–∞ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞!', show_alert=True)


def register_order_call(dp: Dispatcher):
    dp.register_callback_query_handler(order_call_info, lambda callback_query: "call_" in callback_query.data)
    dp.register_callback_query_handler(cancel_order_call, lambda callback_query: callback_query.data == "return_1",
                                       state=user_.order_call)
    dp.register_callback_query_handler(order_call_start, lambda callback_query: "order_" in callback_query.data,
                                       state=user_.order_call)
    dp.register_message_handler(call_user_order_confirm, Regexp(r"^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?["
                                                                r"0-9]{4,6}$"), state=user_.order_call)
    dp.register_message_handler(call_user_order_error, state=user_.order_call)
    dp.register_callback_query_handler(cancel_call_user_order, state=user_.order_call)
    dp.register_callback_query_handler(call_user_send, lambda callback_query: callback_query.data == "phone")
